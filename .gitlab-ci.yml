stages:
  - build
  - test
  - sast
  - deploy

include:
  - template: Jobs/SAST.gitlab-ci.yml

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  BACKEND_IMAGE: $CI_REGISTRY_IMAGE/backend
  FRONTEND_IMAGE: $CI_REGISTRY_IMAGE/frontend
  POSTGRES_USER: user
  POSTGRES_PASSWORD: password
  POSTGRES_DB: mydb
  SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:5432/$POSTGRES_DB

default:
  tags:
    - multi-service

build_backend:
  stage: build
  image: docker:27.3.1
  services:
    - docker:27.3.1-dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build --no-cache --progress=plain -t $BACKEND_IMAGE:$CI_COMMIT_REF_SLUG backend/
    - docker build -t $BACKEND_IMAGE:latest backend/
    - docker push $BACKEND_IMAGE:$CI_COMMIT_REF_SLUG
    - docker push $BACKEND_IMAGE:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - backend/**/*

build_frontend:
  stage: build
  image: docker:27.3.1
  services:
    - docker:27.3.1-dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build --no-cache --progress=plain -t $FRONTEND_IMAGE:$CI_COMMIT_REF_SLUG frontend/
    - docker build -t $FRONTEND_IMAGE:latest frontend/
    - docker push $FRONTEND_IMAGE:$CI_COMMIT_REF_SLUG
    - docker push $FRONTEND_IMAGE:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - frontend/**/*

test_backend:
  stage: test
  image: $BACKEND_IMAGE:latest
  services:
    - name: postgres:latest
      alias: postgres
  variables:
    POSTGRES_HOST: postgres
  script:
    - apt-get update && apt-get install -y postgresql-client
    - until pg_isready -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB; do sleep 1; done
    - pytest backend/tests/
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - backend/**/*
        - database/**/*

test_frontend:
  stage: test
  image: $FRONTEND_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - echo "Run frontend tests here"
  rules:
    - if: "$CI_COMMIT_BRANCH"
      changes:
        - frontend/**/*

sast:
  stage: sast
  image: registry.gitlab.com/security-products/semgrep:5
  script:
    - /analyzer run
  artifacts:
    reports:
      sast: gl-sast-report.json
    paths:
      - gl-sast-report.json
    when: always
  variables:
    SAST_DISABLED: "false"
    SAST_EXIT_CODE: "1"
    SAST_SEVERITY_LEVEL: "info"
    SAST_CONFIDENCE_LEVEL: "low"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event"'

deploy:
  stage: deploy
  script:
    - echo "Deploy services"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
